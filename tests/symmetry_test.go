package tests

import(
	"../noughtscrosses"
	"testing"
)

var control = []byte{0x3,0x2,0x0,
	 			  0x0,0x0,0x0,
	 			  0x0,0x0,0x0}

var match = [8][]byte{
	[]byte{0x3,0x2,0x0,
		0x0,0x0,0x0,
		0x0,0x0,0x0},
	[]byte{0x3,0x0,0x0,
		0x2,0x0,0x0,
		0x0,0x0,0x0},
	[]byte{0x0,0x0,0x0,
		0x2,0x0,0x0,
		0x3,0x0,0x0},
	[]byte{0x0,0x0,0x0,
		0x0,0x0,0x0,
		0x3,0x2,0x0},
	[]byte{0x0,0x0,0x0,
		0x0,0x0,0x0,
		0x0,0x2,0x3},
	[]byte{0x0,0x0,0x0,
		0x0,0x0,0x2,
		0x0,0x0,0x3},
	[]byte{0x0,0x0,0x3,
		0x0,0x0,0x2,
		0x0,0x0,0x0},
	[]byte{0x0,0x2,0x3,
		0x0,0x0,0x0,
		0x0,0x0,0x0}}

var differ = [8][]byte{
	[]byte{0x2,0x3,0x0,
		0x0,0x0,0x0,
		0x0,0x0,0x0},
	[]byte{0x2,0x0,0x0,
		0x3,0x0,0x0,
		0x0,0x0,0x0},
	[]byte{0x0,0x0,0x0,
		0x3,0x0,0x0,
		0x2,0x0,0x0},
	[]byte{0x0,0x0,0x0,
		0x3,0x0,0x0,
		0x2,0x2,0x0},
	[]byte{0x0,0x0,0x0,
		0x0,0x0,0x0,
		0x0,0x3,0x2},
	[]byte{0x0,0x0,0x0,
		0x0,0x0,0x3,
		0x0,0x0,0x2},
	[]byte{0x0,0x0,0x2,
		0x0,0x0,0x3,
		0x0,0x0,0x0},
	[]byte{0x0,0x3,0x2,
		0x0,0x0,0x0,
		0x0,0x0,0x0}}

func TestMaximize(t *testing.T){

	for i := 0; i < len(match); i++ {		
		if board := noughtscrosses.Maximize(match[i]); !assertMatch(board,control){
			t.Fatalf("Index %d in match does not match control", i)
		}
	}
	for i := 0; i < len(differ); i++ {
		if board := noughtscrosses.Maximize(differ[i]); assertMatch(board,control){
			t.Fatalf("Index %d in differ matches control", i)
		}
	}
}